# train.py
from flair.data import Corpus
from flair.datasets import ColumnCorpus
from flair.embeddings import (
    WordEmbeddings,
    FlairEmbeddings,
    StackedEmbeddings
)
from flair.models import SequenceTagger
from flair.trainers import ModelTrainer

# === КОНСТАНТЫ ===
DATA_FOLDER = "."                   # где лежит train.conll
COLUMN_FORMAT = {0: "text", 1: "ner"}
MODEL_DIR = "ner_model"
EPOCHS = 20
LEARNING_RATE = 0.1
BATCH_SIZE = 8

def main():
    # Загружаем корпус
    corpus: Corpus = ColumnCorpus(
        data_folder=DATA_FOLDER,
        column_format=COLUMN_FORMAT,
        train_file="train.conll"
    )

    # Эмбеддинги: мультиязычные + контекстуальные Flair
    embeddings = StackedEmbeddings([
        WordEmbeddings("multi"),           # FastText multilingual
        FlairEmbeddings("multi-forward"),  # контекст вперёд
        FlairEmbeddings("multi-backward")  # контекст назад
    ])

    # Создаём теггер
    tagger = SequenceTagger(
        hidden_size=256,
        embeddings=embeddings,
        tag_dictionary=corpus.make_tag_dictionary(tag_type="ner"),
        tag_type="ner",
        use_crf=True
    )

    # Обучаем
    trainer = ModelTrainer(tagger, corpus)
    trainer.train(
        MODEL_DIR,
        learning_rate=LEARNING_RATE,
        mini_batch_size=BATCH_SIZE,
        max_epochs=EPOCHS,
        embeddings_storage_mode="cpu",
        checkpoint=False,
        param_selection_mode=False
    )

    print(f"✅ Модель сохранена в папку {MODEL_DIR}")

if __name__ == "__main__":
    main()
