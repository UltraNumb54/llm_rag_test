<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RAG Чат</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .chat-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            overflow: hidden;
        }
        
        .chat-header {
            background: #2c3e50;
            color: white;
            padding: 20px;
            text-align: center;
        }
        
        .chat-header h1 {
            font-size: 24px;
            margin-bottom: 5px;
        }
        
        .chat-header .status {
            font-size: 14px;
            opacity: 0.8;
        }
        
        .chat-messages {
            height: 500px;
            overflow-y: auto;
            padding: 20px;
            background: #f8f9fa;
        }
        
        .message {
            margin-bottom: 15px;
            padding: 12px 16px;
            border-radius: 18px;
            max-width: 80%;
            word-wrap: break-word;
        }
        
        .user-message {
            background: #007bff;
            color: white;
            margin-left: auto;
            border-bottom-right-radius: 5px;
        }
        
        .bot-message {
            background: white;
            border: 1px solid #e0e0e0;
            margin-right: auto;
            border-bottom-left-radius: 5px;
        }
        
        .chat-input-container {
            padding: 20px;
            background: white;
            border-top: 1px solid #e0e0e0;
        }
        
        .chat-input {
            display: flex;
            gap: 10px;
        }
        
        #messageInput {
            flex: 1;
            padding: 12px 16px;
            border: 1px solid #ddd;
            border-radius: 25px;
            outline: none;
            font-size: 16px;
        }
        
        #messageInput:focus {
            border-color: #007bff;
        }
        
        #sendButton {
            padding: 12px 24px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s;
        }
        
        #sendButton:hover {
            background: #0056b3;
        }
        
        #sendButton:disabled {
            background: #6c757d;
            cursor: not-allowed;
        }
        
        .typing {
            opacity: 0.7;
            font-style: italic;
        }
        
        .sources {
            margin-top: 10px;
            font-size: 12px;
            color: #666;
            border-top: 1px solid #eee;
            padding-top: 5px;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            <h1>RAG Чат</h1>
            <div class="status" id="status">Загрузка...</div>
        </div>
        
        <div class="chat-messages" id="chatMessages">
            <div class="message bot-message">
                Добро пожаловать! Задайте вопрос по вашим документам.
            </div>
        </div>
        
        <div class="chat-input-container">
            <div class="chat-input">
                <input type="text" id="messageInput" placeholder="Введите ваш вопрос..." disabled>
                <button id="sendButton" disabled>Отправить</button>
            </div>
        </div>
    </div>

    <script>
        class RagChat {
            constructor() {
                this.messageInput = document.getElementById('messageInput');
                this.sendButton = document.getElementById('sendButton');
                this.chatMessages = document.getElementById('chatMessages');
                this.status = document.getElementById('status');
                
                this.initializeEventListeners();
                this.checkStatus();
            }
            
            initializeEventListeners() {
                this.sendButton.addEventListener('click', () => this.sendMessage());
                this.messageInput.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') {
                        this.sendMessage();
                    }
                });
            }
            
            async checkStatus() {
                try {
                    const response = await fetch('/status');
                    const status = await response.json();
                    
                    if (status.model_configured && status.collection_size > 0) {
                        this.status.textContent = `Готов к работе (документов: ${status.collection_size})`;
                        this.messageInput.disabled = false;
                        this.sendButton.disabled = false;
                        this.messageInput.placeholder = "Введите ваш вопрос...";
                    } else {
                        this.status.textContent = 'Настройте модель и загрузите документы';
                    }
                } catch (error) {
                    this.status.textContent = 'Ошибка подключения к серверу';
                }
            }
            
            async sendMessage() {
                const message = this.messageInput.value.trim();
                if (!message) return;
                
                this.addMessage('user', message);
                this.messageInput.value = '';
                this.setLoading(true);
                
                try {
                    const response = await fetch('/chat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            message: message,
                            history: [] // Можно добавить историю при необходимости
                        })
                    });
                    
                    const data = await response.json();
                    this.addMessage('bot', data.response, data.sources);
                    
                } catch (error) {
                    this.addMessage('bot', 'Извините, произошла ошибка при обработке запроса.');
                } finally {
                    this.setLoading(false);
                }
            }
            
            addMessage(role, content, sources = null) {
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${role}-message`;
                messageDiv.textContent = content;
                
                if (sources && sources.length > 0) {
                    const sourcesDiv = document.createElement('div');
                    sourcesDiv.className = 'sources';
                    sourcesDiv.textContent = `Источники: ${sources.length}`;
                    messageDiv.appendChild(sourcesDiv);
                }
                
                this.chatMessages.appendChild(messageDiv);
                this.chatMessages.scrollTop = this.chatMessages.scrollHeight;
            }
            
            setLoading(loading) {
                this.messageInput.disabled = loading;
                this.sendButton.disabled = loading;
                this.sendButton.textContent = loading ? 'Отправка...' : 'Отправить';
            }
        }
        
        // Инициализация чата при загрузке страницы
        document.addEventListener('DOMContentLoaded', () => {
            new RagChat();
        });
    </script>
</body>
</html>
